/*
 * This file is generated by jOOQ.
 */
package eu.fasten.core.data.metadatadb.codegen.tables.records;


import eu.fasten.core.data.metadatadb.codegen.tables.IngestedArtifacts;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IngestedArtifactsRecord extends UpdatableRecordImpl<IngestedArtifactsRecord> implements Record3<String, String, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ingested_artifacts.key</code>.
     */
    public void setKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ingested_artifacts.key</code>.
     */
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.ingested_artifacts.plugin_version</code>.
     */
    public void setPluginVersion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ingested_artifacts.plugin_version</code>.
     */
    public String getPluginVersion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ingested_artifacts.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ingested_artifacts.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return IngestedArtifacts.INGESTED_ARTIFACTS.KEY;
    }

    @Override
    public Field<String> field2() {
        return IngestedArtifacts.INGESTED_ARTIFACTS.PLUGIN_VERSION;
    }

    @Override
    public Field<Timestamp> field3() {
        return IngestedArtifacts.INGESTED_ARTIFACTS.TIMESTAMP;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getPluginVersion();
    }

    @Override
    public Timestamp component3() {
        return getTimestamp();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getPluginVersion();
    }

    @Override
    public Timestamp value3() {
        return getTimestamp();
    }

    @Override
    public IngestedArtifactsRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public IngestedArtifactsRecord value2(String value) {
        setPluginVersion(value);
        return this;
    }

    @Override
    public IngestedArtifactsRecord value3(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public IngestedArtifactsRecord values(String value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IngestedArtifactsRecord
     */
    public IngestedArtifactsRecord() {
        super(IngestedArtifacts.INGESTED_ARTIFACTS);
    }

    /**
     * Create a detached, initialised IngestedArtifactsRecord
     */
    public IngestedArtifactsRecord(String key, String pluginVersion, Timestamp timestamp) {
        super(IngestedArtifacts.INGESTED_ARTIFACTS);

        setKey(key);
        setPluginVersion(pluginVersion);
        setTimestamp(timestamp);
    }
}
