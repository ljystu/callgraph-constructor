/*
 * This file is generated by jOOQ.
 */
package eu.fasten.core.data.metadatadb.codegen;


import eu.fasten.core.data.metadatadb.codegen.tables.ArtifactRepositories;
import eu.fasten.core.data.metadatadb.codegen.tables.BinaryModuleContents;
import eu.fasten.core.data.metadatadb.codegen.tables.BinaryModules;
import eu.fasten.core.data.metadatadb.codegen.tables.CallSites;
import eu.fasten.core.data.metadatadb.codegen.tables.Callables;
import eu.fasten.core.data.metadatadb.codegen.tables.Dependencies;
import eu.fasten.core.data.metadatadb.codegen.tables.Files;
import eu.fasten.core.data.metadatadb.codegen.tables.IngestedArtifacts;
import eu.fasten.core.data.metadatadb.codegen.tables.IngestionRetries;
import eu.fasten.core.data.metadatadb.codegen.tables.ModuleContents;
import eu.fasten.core.data.metadatadb.codegen.tables.ModuleNames;
import eu.fasten.core.data.metadatadb.codegen.tables.Modules;
import eu.fasten.core.data.metadatadb.codegen.tables.PackageVersions;
import eu.fasten.core.data.metadatadb.codegen.tables.Packages;
import eu.fasten.core.data.metadatadb.codegen.tables.PgpArmorHeaders;
import eu.fasten.core.data.metadatadb.codegen.tables.VirtualImplementations;
import eu.fasten.core.data.metadatadb.codegen.tables.Vulnerabilities;
import eu.fasten.core.data.metadatadb.codegen.tables.VulnerabilitiesPurls;
import eu.fasten.core.data.metadatadb.codegen.tables.VulnerabilitiesXCallables;
import eu.fasten.core.data.metadatadb.codegen.tables.VulnerabilitiesXPackageVersions;
import eu.fasten.core.data.metadatadb.codegen.tables.records.PgpArmorHeadersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.artifact_repositories</code>.
     */
    public final ArtifactRepositories ARTIFACT_REPOSITORIES = ArtifactRepositories.ARTIFACT_REPOSITORIES;

    /**
     * The table <code>public.binary_module_contents</code>.
     */
    public final BinaryModuleContents BINARY_MODULE_CONTENTS = BinaryModuleContents.BINARY_MODULE_CONTENTS;

    /**
     * The table <code>public.binary_modules</code>.
     */
    public final BinaryModules BINARY_MODULES = BinaryModules.BINARY_MODULES;

    /**
     * The table <code>public.call_sites</code>.
     */
    public final CallSites CALL_SITES = CallSites.CALL_SITES;

    /**
     * The table <code>public.callables</code>.
     */
    public final Callables CALLABLES = Callables.CALLABLES;

    /**
     * The table <code>public.dependencies</code>.
     */
    public final Dependencies DEPENDENCIES = Dependencies.DEPENDENCIES;

    /**
     * The table <code>public.files</code>.
     */
    public final Files FILES = Files.FILES;

    /**
     * The table <code>public.ingested_artifacts</code>.
     */
    public final IngestedArtifacts INGESTED_ARTIFACTS = IngestedArtifacts.INGESTED_ARTIFACTS;

    /**
     * The table <code>public.ingestion_retries</code>.
     */
    public final IngestionRetries INGESTION_RETRIES = IngestionRetries.INGESTION_RETRIES;

    /**
     * The table <code>public.module_contents</code>.
     */
    public final ModuleContents MODULE_CONTENTS = ModuleContents.MODULE_CONTENTS;

    /**
     * The table <code>public.module_names</code>.
     */
    public final ModuleNames MODULE_NAMES = ModuleNames.MODULE_NAMES;

    /**
     * The table <code>public.modules</code>.
     */
    public final Modules MODULES = Modules.MODULES;

    /**
     * The table <code>public.package_versions</code>.
     */
    public final PackageVersions PACKAGE_VERSIONS = PackageVersions.PACKAGE_VERSIONS;

    /**
     * The table <code>public.packages</code>.
     */
    public final Packages PACKAGES = Packages.PACKAGES;

    /**
     * The table <code>public.pgp_armor_headers</code>.
     */
    public final PgpArmorHeaders PGP_ARMOR_HEADERS = PgpArmorHeaders.PGP_ARMOR_HEADERS;

    /**
     * Call <code>public.pgp_armor_headers</code>.
     */
    public static Result<PgpArmorHeadersRecord> PGP_ARMOR_HEADERS(
          Configuration configuration
        , String __1
    ) {
        return configuration.dsl().selectFrom(eu.fasten.core.data.metadatadb.codegen.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
              __1
        )).fetch();
    }

    /**
     * Get <code>public.pgp_armor_headers</code> as a table.
     */
    public static PgpArmorHeaders PGP_ARMOR_HEADERS(
          String __1
    ) {
        return eu.fasten.core.data.metadatadb.codegen.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
            __1
        );
    }

    /**
     * Get <code>public.pgp_armor_headers</code> as a table.
     */
    public static PgpArmorHeaders PGP_ARMOR_HEADERS(
          Field<String> __1
    ) {
        return eu.fasten.core.data.metadatadb.codegen.tables.PgpArmorHeaders.PGP_ARMOR_HEADERS.call(
            __1
        );
    }

    /**
     * The table <code>public.virtual_implementations</code>.
     */
    public final VirtualImplementations VIRTUAL_IMPLEMENTATIONS = VirtualImplementations.VIRTUAL_IMPLEMENTATIONS;

    /**
     * The table <code>public.vulnerabilities</code>.
     */
    public final Vulnerabilities VULNERABILITIES = Vulnerabilities.VULNERABILITIES;

    /**
     * The table <code>public.vulnerabilities_purls</code>.
     */
    public final VulnerabilitiesPurls VULNERABILITIES_PURLS = VulnerabilitiesPurls.VULNERABILITIES_PURLS;

    /**
     * The table <code>public.vulnerabilities_x_callables</code>.
     */
    public final VulnerabilitiesXCallables VULNERABILITIES_X_CALLABLES = VulnerabilitiesXCallables.VULNERABILITIES_X_CALLABLES;

    /**
     * The table <code>public.vulnerabilities_x_package_versions</code>.
     */
    public final VulnerabilitiesXPackageVersions VULNERABILITIES_X_PACKAGE_VERSIONS = VulnerabilitiesXPackageVersions.VULNERABILITIES_X_PACKAGE_VERSIONS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            ArtifactRepositories.ARTIFACT_REPOSITORIES,
            BinaryModuleContents.BINARY_MODULE_CONTENTS,
            BinaryModules.BINARY_MODULES,
            CallSites.CALL_SITES,
            Callables.CALLABLES,
            Dependencies.DEPENDENCIES,
            Files.FILES,
            IngestedArtifacts.INGESTED_ARTIFACTS,
            IngestionRetries.INGESTION_RETRIES,
            ModuleContents.MODULE_CONTENTS,
            ModuleNames.MODULE_NAMES,
            Modules.MODULES,
            PackageVersions.PACKAGE_VERSIONS,
            Packages.PACKAGES,
            PgpArmorHeaders.PGP_ARMOR_HEADERS,
            VirtualImplementations.VIRTUAL_IMPLEMENTATIONS,
            Vulnerabilities.VULNERABILITIES,
            VulnerabilitiesPurls.VULNERABILITIES_PURLS,
            VulnerabilitiesXCallables.VULNERABILITIES_X_CALLABLES,
            VulnerabilitiesXPackageVersions.VULNERABILITIES_X_PACKAGE_VERSIONS
        );
    }
}
