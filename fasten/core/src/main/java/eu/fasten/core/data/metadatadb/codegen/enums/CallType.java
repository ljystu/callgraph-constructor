/*
 * This file is generated by jOOQ.
 */
package eu.fasten.core.data.metadatadb.codegen.enums;


import eu.fasten.core.data.metadatadb.codegen.Public;
import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "https://www.jooq.org",
                "jOOQ version:3.16.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public enum CallType implements EnumType {

    static_("static"),

    dynamic("dynamic"),

    virtual("virtual"),

    interface_("interface"),

    special("special");

    private final String literal;

    private CallType(String literal) {
        this.literal = literal;
    }

    @Override
    public Catalog getCatalog() {
        return getSchema().getCatalog();
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public String getName() {
        return "call_type";
    }

    @Override
    public String getLiteral() {
        return literal;
    }

    /**
     * Lookup a value of this EnumType by its literal
     */
    public static CallType lookupLiteral(String literal) {
        return EnumType.lookupLiteral(CallType.class, literal);
    }
}
